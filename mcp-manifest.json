{
  "name": "UniAuto Test Automation",
  "version": "1.0.0",
  "description": "Universal Test Automation with self-healing capabilities",
  "author": "UniAuto Team",
  "protocol": "mcp",
  "protocolName": "Model Context Protocol",
  "protocolVersion": "1.0",
  "actions": [
    {
      "name": "navigate",
      "description": "Navigate to a URL",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL to navigate to", "required": true }
      ]
    },
    {
      "name": "click",
      "description": "Click on an element",
      "parameters": [
        { "name": "selector", "type": "string", "description": "CSS selector of the element", "required": true }
      ]
    },
    {
      "name": "type",
      "description": "Type text into an input field",
      "parameters": [
        { "name": "selector", "type": "string", "description": "CSS selector of the input field", "required": true },
        { "name": "text", "type": "string", "description": "Text to type", "required": true },
        { "name": "clearFirst", "type": "boolean", "description": "Clear the field before typing", "required": false }
      ]
    },
    {
      "name": "select",
      "description": "Select an option from a dropdown",
      "parameters": [
        { "name": "selector", "type": "string", "description": "CSS selector of the select element", "required": true },
        { "name": "value", "type": "string", "description": "Value to select", "required": true }
      ]
    },
    {
      "name": "extract",
      "description": "Extract data from an element",
      "parameters": [
        { "name": "selector", "type": "string", "description": "CSS selector of the element", "required": true },
        { "name": "attribute", "type": "string", "description": "Attribute to extract (default: textContent)", "required": false }
      ]
    },
    {
      "name": "screenshot",
      "description": "Take a screenshot",
      "parameters": []
    },
    {
      "name": "wait",
      "description": "Wait for a specified time in milliseconds",
      "parameters": [
        { "name": "milliseconds", "type": "number", "description": "Time to wait in milliseconds", "required": false }
      ]
    },
    {
      "name": "desktop_click",
      "description": "Click at specific coordinates on the desktop",
      "parameters": [
        { "name": "x", "type": "number", "description": "X coordinate", "required": true },
        { "name": "y", "type": "number", "description": "Y coordinate", "required": true }
      ]
    },
    {
      "name": "desktop_type",
      "description": "Type text on the desktop",
      "parameters": [
        { "name": "text", "type": "string", "description": "Text to type", "required": true }
      ]
    },
    {
      "name": "ai_process",
      "description": "Process a task with AI to generate automation steps",
      "parameters": [
        { "name": "task", "type": "string", "description": "Task description", "required": true },
        { "name": "url", "type": "string", "description": "URL context", "required": false },
        { "name": "model", "type": "string", "description": "AI model to use", "required": false }
      ]
    },
    {
      "name": "generate_tests",
      "description": "Generate test cases for an application in a specific framework and style",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL of the application to analyze", "required": true },
        { "name": "framework", "type": "string", "description": "Test framework to use (e.g., playwright, cypress, jest)", "required": false },
        { "name": "style", "type": "string", "description": "Test style (e.g., bdd, tdd)", "required": false },
        { "name": "format", "type": "string", "description": "Output format (e.g., javascript, typescript, python)", "required": false },
        { "name": "prompt", "type": "string", "description": "User prompt describing test requirements", "required": false },
        { "name": "outputPath", "type": "string", "description": "Path to save generated tests", "required": false },
        { "name": "additionalContext", "type": "object", "description": "Additional context for test generation", "required": false }
      ]
    },
    {
      "name": "generate_test_suite",
      "description": "Generate a complete test suite with different test types (unit, integration, e2e, etc.)",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL of the application to analyze", "required": true },
        { "name": "framework", "type": "string", "description": "Test framework to use", "required": false },
        { "name": "format", "type": "string", "description": "Output format", "required": false },
        { "name": "outputDir", "type": "string", "description": "Directory to save generated tests", "required": false },
        { "name": "additionalContext", "type": "object", "description": "Additional context for test generation", "required": false }
      ]
    },
    {
      "name": "scaffold_project",
      "description": "Scaffold a complete test project structure with configuration files",
      "parameters": [
        { "name": "framework", "type": "string", "description": "Test framework to use", "required": true },
        { "name": "outputDir", "type": "string", "description": "Directory to create the project", "required": true }
      ]
    },
    {
      "name": "list_frameworks",
      "description": "Get a list of supported test frameworks, styles, and formats",
      "parameters": []
    },
    {
      "name": "visual_compare",
      "description": "Compare a page or element against a baseline image",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL to navigate to", "required": true },
        { "name": "selector", "type": "string", "description": "Optional CSS selector to compare", "required": false },
        { "name": "baselineName", "type": "string", "description": "Name for the baseline image", "required": false },
        { "name": "updateBaseline", "type": "boolean", "description": "Whether to update the baseline", "required": false },
        { "name": "threshold", "type": "number", "description": "Difference threshold percentage (default: 0.1)", "required": false }
      ]
    },
    {
      "name": "accessibility_test",
      "description": "Perform accessibility testing on a page",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL to test", "required": true },
        { "name": "standard", "type": "string", "description": "Accessibility standard (wcag2a, wcag2aa, wcag21aa)", "required": false }
      ]
    },
    {
      "name": "performance_test",
      "description": "Perform performance testing on a page",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL to test", "required": true },
        { "name": "iterations", "type": "number", "description": "Number of test iterations", "required": false }
      ]
    },
    {
      "name": "network_trace",
      "description": "Trace network activity for API testing and analysis",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL to test", "required": true },
        { "name": "apiEndpoints", "type": "array", "description": "Optional API endpoints to specifically monitor", "required": false }
      ]
    },
    {
      "name": "run_test_suite",
      "description": "Run a comprehensive test suite with multiple test types",
      "parameters": [
        { "name": "url", "type": "string", "description": "URL to test", "required": true },
        { "name": "visual", "type": "boolean", "description": "Whether to run visual tests", "required": false },
        { "name": "accessibility", "type": "boolean", "description": "Whether to run accessibility tests", "required": false },
        { "name": "performance", "type": "boolean", "description": "Whether to run performance tests", "required": false },
        { "name": "network", "type": "boolean", "description": "Whether to run network tests", "required": false }
      ]
    }
  ],
  "capabilities": [
    "web_automation",
    "desktop_automation",
    "self_healing",
    "ai_integration",
    "screenshot_capture",
    "visual_comparison",
    "test_generation",
    "project_scaffolding",
    "accessibility_testing",
    "performance_testing",
    "network_tracing",
    "parallel_testing"
  ],
  "endpoints": {
    "invoke": "/api/mcp/invoke",
    "manifest": "/api/mcp/manifest"
  }
}