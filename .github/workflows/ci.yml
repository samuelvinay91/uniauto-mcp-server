name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run unit tests
        run: npm test
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run integration tests
        run: npm run test:integration
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            test-results/
            reports/
            logs/
  
  build:
    runs-on: ubuntu-latest
    
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build package
        run: |
          # Create a package directory
          mkdir -p dist
          # Copy all necessary files
          cp -r src config docs public mcp-manifest.json package.json README.md dist/
          # Create a tarball
          cd dist
          npm pack
          mv *.tgz ../uniauto-mcp-server.tgz
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: uniauto-mcp-server
          path: uniauto-mcp-server.tgz