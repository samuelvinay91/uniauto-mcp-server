name: Publish to Smithery.ai

on:
  push:
    branches: [main]
    tags: ['v*']
  release:
    types: [published]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests
        run: npm test
  
  build-and-publish:
    needs: test
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup environment 
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=$(node -p "require('./package.json').version")-dev-$(date +%Y%m%d%H%M%S)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Publishing version $VERSION"
      
      - name: Build package
        run: |
          # Create a package directory
          mkdir -p dist
          # Copy all necessary files
          cp -r src config docs public mcp-manifest.json package.json README.md dist/
          # Create a tarball
          cd dist
          npm pack
          mv *.tgz ../uniauto-mcp-server-${{ env.VERSION }}.tgz
      
      - name: Publish to Smithery.ai
        env:
          SMITHERY_API_KEY: ${{ secrets.SMITHERY_API_KEY }}
        run: |
          # Install Smithery CLI
          npm install -g @smithery/cli
          
          # Publish the package
          smithery publish \
            --version ${{ env.VERSION }} \
            --package ./uniauto-mcp-server-${{ env.VERSION }}.tgz \
            --description "Universal Test Automation MCP Server with self-healing capabilities" \
            --documentation "https://github.com/your-org/uniauto-mcp-server"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: uniauto-mcp-server
          path: uniauto-mcp-server-${{ env.VERSION }}.tgz